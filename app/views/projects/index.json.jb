json = { status: :success }

json[:projects] = projects.map do |r|

  case r.project_category
  when 'project_print'

    specifications = []
    after_process = {'bool': false, 'name': '後加工仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    binding_work = {'bool': false, 'name': '製本仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    print = {'bool': true, 'name': 'プリント仕様', 'price': r.print.price.nil? ? 0 : r.print.price}
    count = []
    if r.after_process == 'after_process_necessary'

      count.push('after_process')
    elsif r.after_process == 'binding_works_necessary'

      count.push('binding_works')
    end

    countLength = count.length
    if countLength != 0

      countLength.times do |i|

        case count[i]
        when 'after_process'

          after_process['bool'] = true
          after_process['price'] = r.project_after_process.price.nil? ? 0 : r.project_after_process.price
          after_process['project_id'] = r.project_after_process.project_id
          after_process['id'] = r.project_after_process.id
        when 'binding_works'

          binding_work['bool'] = true
          binding_work['price'] = r.project_binding_work.price.nil? ? 0 : r.project_binding_work.price
          binding_work['project_id'] = r.project_binding_work.project_id
          binding_work['id'] = r.project_binding_work.id
        end
      end
    end

    specifications.push(after_process)
    specifications.push(binding_work)
    specifications.push(print)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }
  when 'project_copy'

    specifications = []
    after_process = {'bool': false, 'name': '後加工仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    binding_work = {'bool': false, 'name': '製本仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    count = []
    if r.after_process == 'after_process_necessary'

      count.push('after_process')
    elsif r.after_process == 'binding_works_necessary'

      count.push('binding_works')
    end

    countLength = count.length
    if countLength != 0

      countLength.times do |i|

        case count[i]
        when 'after_process'

          after_process['bool'] = true
          after_process['price'] = r.project_after_process.price.nil? ? 0 : r.project_after_process.price
          after_process['project_id'] = r.project_after_process.project_id
          after_process['id'] = r.project_after_process.id
        when 'binding_works'

          binding_work['bool'] = true
          binding_work['price'] = r.project_binding_work.price.nil? ? 0 : r.project_binding_work.price
          binding_work['project_id'] = r.project_binding_work.project_id
          binding_work['id'] = r.project_binding_work.id
        end
      end
    end

    specifications.push(after_process)
    specifications.push(binding_work)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }
    when 'project_card'

    specifications = []
    card = {'bool': true, 'name': 'プリント仕様', 'price': r.card.price.nil? ? 0 : r.card.price, 'project_id': r.card.project_id, 'id': r.card.id}
    specifications.push(card)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }

  when 'project_scan'

    scan = {'bool': true, 'name': '複写仕様', 'price': r.scan.price.nil? ? 0 : r.scan.price, 'project_id': r.scan.project_id, 'id': r.scan.id}
    specifications = []
    specifications.push(scan)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }
  when 'project_bind'

    specifications = []
    after_process = {'bool': false, 'name': '後加工仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    binding_work = {'bool': false, 'name': '製本仕様', 'price': 0, 'project_id': 0, 'id': 0, }
    count = []
    if r.after_process == 'after_process_necessary'

      count.push('after_process')
    elsif r.after_process == 'binding_works_necessary'

      count.push('binding_works')
    end

    countLength = count.length
    if countLength != 0

      countLength.times do |i|

        case count[i]
        when 'after_process'

          after_process['bool'] = true
          after_process['price'] = r.project_after_process.price.nil? ? 0 : r.project_after_process.price
          after_process['project_id'] = r.project_after_process.project_id
          after_process['id'] = r.project_after_process.id
        when 'binding_works'

          binding_work['bool'] = true
          binding_work['price'] = r.project_binding_work.price.nil? ? 0 : r.project_binding_work.price
          binding_work['project_id'] = r.project_binding_work.project_id
          binding_work['id'] = r.project_binding_work.id
        end
      end
    end

    specifications.push(after_process)
    specifications.push(binding_work)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }
  when 'project_other'

    specifications = []
    other = {'bool': false}

    specifications.push(other)
    {
      id: r.id,
      name: r.name,
      price: r.price,
      specifications: specifications,
    }
  end
end

json
