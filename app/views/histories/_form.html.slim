.l-contents
  section.l-contents__inner

    = form_for history, html: { class: 'u-mt-30'} do |f|

      .c-form-label
        = f.label :date, '対応日時'
        span.c-form__required.u-ml-10 必須
      = f.date_select :date, {use_month_numbers: true}, {class: 'c-form-dateselect'}

      .c-form-label
        = f.label :content, '対応内容'
        span.c-form__required.u-ml-10 必須
      = f.text_field :content, placeholder: '対応内容', class: 'c-form-text', required: :true

      .c-form-label
        = f.label :user, '対応者'
        span.c-form__required.u-ml-10 必須
      = f.select :user, ['李', '中原', '田中(雄)', '大橋', '米田'], {prompt: '担当者'}, { class: 'c-form-dateselect', required: true }

      .c-form-label
        = f.label :memo, 'メモ'
      = f.text_area :memo, placeholder: 'メモを入力してください', class: 'c-form-textarea', rows: 4

      .c-form-label
        = f.label :attachment, '資料リンク'
      = f.text_field :attachment, placeholder: '資料リンクを貼り付けてください', type: 'url', class: 'c-form-text'

      .u-ta-center.u-mt-30 = f.submit history.new_record?? '作成する' : '更新する', class: 'c-btnMain-standard c-btn-blue'

javascript:
  window.onload = function(){

  var content = document.getElementById('history_content')
  var user = document.getElementById('history_user')
  var url = document.getElementById('history_attachment')

  //対応内容のバリデーション
  content.addEventListener('invalid', function(e) {
        e.target.setCustomValidity('');
        if(content.validity.valueMissing){
          e.target.setCustomValidity('対応内容を入力してください');
        }
      }, false);

  //担当者のバリデーション
  user.addEventListener('invalid', function(e) {
        e.target.setCustomValidity('');
        if(user.validity.valueMissing){
          e.target.setCustomValidity('担当者を選択してください');
        }
      }, false);

  //urlのバリデーション
  url.addEventListener('invalid', function(e) {
        e.target.setCustomValidity('');
        if(url.validity.typeMismatch){
          e.target.setCustomValidity('URLが正しくありません');
        }
      }, false);
  }
